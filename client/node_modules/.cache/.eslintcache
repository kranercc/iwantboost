[{"C:\\Users\\krane\\Desktop\\iwantboost\\website\\iwantboost\\client\\src\\index.js":"1","C:\\Users\\krane\\Desktop\\iwantboost\\website\\iwantboost\\client\\src\\reportWebVitals.js":"2","C:\\Users\\krane\\Desktop\\iwantboost\\website\\iwantboost\\client\\src\\App.js":"3","C:\\Users\\krane\\Desktop\\iwantboost\\website\\iwantboost\\client\\src\\components\\Overlay.jsx":"4","C:\\Users\\krane\\Desktop\\iwantboost\\website\\iwantboost\\client\\src\\components\\BoosterCard.jsx":"5","C:\\Users\\krane\\Desktop\\iwantboost\\website\\iwantboost\\client\\src\\components\\SideBar.jsx":"6","C:\\Users\\krane\\Desktop\\iwantboost\\website\\iwantboost\\client\\src\\components\\Header.jsx":"7","C:\\Users\\krane\\Desktop\\iwantboost\\website\\iwantboost\\client\\src\\components\\LandingPage.jsx":"8","C:\\Users\\krane\\Desktop\\iwantboost\\website\\iwantboost\\client\\src\\components\\BecomeABooster.jsx":"9","C:\\Users\\krane\\Desktop\\iwantboost\\website\\iwantboost\\client\\src\\components\\ModernTextField.jsx":"10"},{"size":500,"mtime":1641170808973,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1641170809091,"results":"13","hashOfConfig":"12"},{"size":5831,"mtime":1641440534932,"results":"14","hashOfConfig":"12"},{"size":700,"mtime":1641181076114,"results":"15","hashOfConfig":"12"},{"size":5094,"mtime":1641400963946,"results":"16","hashOfConfig":"12"},{"size":1707,"mtime":1641239878085,"results":"17","hashOfConfig":"12"},{"size":2016,"mtime":1641437676709,"results":"18","hashOfConfig":"12"},{"size":2150,"mtime":1641396490692,"results":"19","hashOfConfig":"12"},{"size":8128,"mtime":1641440886638,"results":"20","hashOfConfig":"12"},{"size":756,"mtime":1641430988765,"results":"21","hashOfConfig":"22"},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"1lb9r0y",{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"25"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"25"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"25"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"25"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"17pxxpa","C:\\Users\\krane\\Desktop\\iwantboost\\website\\iwantboost\\client\\src\\index.js",[],["48","49"],"C:\\Users\\krane\\Desktop\\iwantboost\\website\\iwantboost\\client\\src\\reportWebVitals.js",[],"C:\\Users\\krane\\Desktop\\iwantboost\\website\\iwantboost\\client\\src\\App.js",["50","51"],"import logo from './logo.svg';\nimport './App.css';\nimport './mui.css';\nimport './become_a_booster.css';\nimport BoosterCard from './components/BoosterCard';\nimport Header from './components/Header';\nimport SideBar from './components/SideBar';\nimport Overlay from './components/Overlay';\nimport LandingPage from './components/LandingPage';\nimport Particles from \"react-tsparticles\";\nimport BecomeABooster from './components/BecomeABooster';\nimport ReactNotification from 'react-notifications-component';\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <ReactNotification />\n            <div className='background_body'></div>\n\n            <div className='landingpage' id=\"landing\">    \n                <Particles\n                    id=\"tsparticles\"\n                    options={{\n                        background: {\n                            color: {\n                            },\n                        },\n                        fpsLimit: 144,\n                        interactivity: {\n                            events: {\n                                onClick: {\n                                    enable: true,\n                                    mode: \"push\",\n                                },\n                                onHover: {\n                                    enable: true,\n                                    mode: \"repulse\",\n                                },\n                                resize: true,\n                            },\n                            modes: {\n                                bubble: {\n                                    distance: 400,\n                                    duration: 2,\n                                    opacity: 0.8,\n                                    size: 40,\n                                },\n                                push: {\n                                    quantity: 3,\n                                },\n                                repulse: {\n                                    distance: 200,\n                                    duration: 0.4,\n                                },\n                            },\n                        },\n                        particles: {\n                            color: {\n                                value: \"#ffffff\",\n                            },\n                            links: {\n                                color: \"#ffffff\",\n                                distance: 150,\n                                enable: true,\n                                opacity: 0.5,\n                                width: 0.8,\n                            },\n                            collisions: {\n                                enable: true,\n                            },\n                            move: {\n                                direction: \"none\",\n                                enable: true,\n                                outMode: \"bounce\",\n                                random: false,\n                                speed: 2,\n                                straight: false,\n                            },\n                            number: {\n                                density: {\n                                    enable: true,\n                                    area: 800,\n                                },\n                                value: 30,\n                            },\n                            opacity: {\n                                value: 0.5,\n                            },\n                            shape: {\n                                type: \"circle\",\n                            },\n                            size: {\n                                random: true,\n                                value: 5,\n                            },\n                        },\n                        detectRetina: true,\n                    }}\n                />\n\n                <div className='landingpageBackground'></div>\n                <LandingPage />\n               \n               \n\n            </div>\n            \n            <div id='main' style={{ display: \"none\" }}>\n                <Header />\n                <SideBar />\n\n                <div className='main-content'>\n                    <BoosterCard email=\"kranedota3@gmail.com\" discord=\"krane#2890\" id=\"krane\" mmr=\"5600 MMR\" img=\"https://www.earlygame.com/uploads/images/meepo-guide-fan-art.jpg\" booster_name=\"krane\" booster_description=\"I have played dota2 for a long while, and i gathered the information needed to boost you to the next level\"></BoosterCard>\n                    <BoosterCard email=\"jais4noreturn@gmail.com\" discord=\"pixzy#2798\" id=\"Jaijaigaming\" mmr=\"5790 MMR\" booster_name=\"Jaijaigaming\" booster_description=\"I can play dota 24/7, I have played since 2014 and i'm ready to boost you. Contact me, I respond fast ;)\" img=\"https://cdn.discordapp.com/attachments/928166531119054938/928168894319976469/FB_IMG_1639647084554.jpg\"></BoosterCard>\n                    <BoosterCard email=\"mamaroo200@gmail.com\" discord=\"Restart#7799\" id=\"Restart\" mmr=\"6890 MMR\" img=\"https://i.pinimg.com/originals/33/a8/5a/33a85aae18c8c22d9d36ef8fc8fd7759.jpg\" booster_name=\"Restart\" booster_description=\"I can play 10+ games per day, my role is carry/mid. For boost contact me, thank you!\"></BoosterCard>\n                    <BoosterCard email=\"gundum.co.th@gmail.com\" discord=\"RAVR#5644\" id=\"ravr\" mmr=\"6900 MMR\" img=\"https://cdn.discordapp.com/attachments/928176702750855249/928435931202072586/doctor.jpg\" booster_name=\"ravr\" booster_description=\" i have been playing moba for like half of my life i'm pretty sure i can boost you to any rank you want\"></BoosterCard>\n                </div>\n                <div className='csgo-content'>\n                </div>\n            </div>\n\n            <BecomeABooster/>\n        </div>\n    );\n}\n\nexport default App;\n\n","C:\\Users\\krane\\Desktop\\iwantboost\\website\\iwantboost\\client\\src\\components\\Overlay.jsx",[],"C:\\Users\\krane\\Desktop\\iwantboost\\website\\iwantboost\\client\\src\\components\\BoosterCard.jsx",["52","53","54","55","56","57","58","59"],"//card class using material ui card component\r\n//import all necesarry\r\n\r\n\r\nimport * as React from 'react';\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport CardMedia from '@mui/material/CardMedia';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\n\r\n//card color #233454\r\n\r\nclass BoosterCard extends React.Component {\r\n\r\n    //make a changable text for the description of the booster\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            description: this.props.booster_description,\r\n            contact_button_text: \"Contact Booster\"\r\n        }\r\n\r\n        this.ContactBooster = this.ContactBooster.bind(this);\r\n    }\r\n\r\n\r\n    ContactBooster(data) {\r\n        console.log(data.target.id)\r\n\r\n        this.setState({\r\n            description:\r\n                <div>\r\n                    <center><a style={{ color: \"#b5b5b5\" }}>Contact</a></center>\r\n\r\n                    {this.props.discord ? <div><a style={{ color: \"#b5b5b5\", }}>Discord: {this.props.discord}</a><br /></div> : <a style={{ color: \"#8b8c8f\", }}>No contact info available</a>}\r\n                    {this.props.email ? <div><a style={{ color: \"#b5b5b5\", }}>Email: {this.props.email}</a><br /></div> : null}\r\n                </div>\r\n        })\r\n        this.setState({\r\n            contact_button_text: \"See booster info\"\r\n        })\r\n\r\n        {\r\n            if (this.state.contact_button_text === \"See booster info\") {\r\n                this.setState({\r\n                    contact_button_text: \"Contact Booster\"\r\n                })\r\n                this.setState({\r\n                    description: this.props.booster_description\r\n                })\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n\r\n                <Card className=\"card\" sx={{\r\n                    // width: 345,\r\n                    // height: 345,\r\n                    //make it look like a card\r\n                    width: \"75%\",\r\n                    height: \"80%\",\r\n                    boxShadow: '0px 0px 5px 0px rgba(0,0,0,0.75)',\r\n                    borderRadius: '5px',\r\n                    margin: '10px',\r\n                    padding: '10px',\r\n                    backgroundColor: '#233454',\r\n                    color: 'white'\r\n\r\n                }}>\r\n                    <CardMedia\r\n                        component=\"img\"\r\n                        alt=\"green iguana\"\r\n                        height=\"140\"\r\n                        image={this.props.img}\r\n                    />\r\n                    <CardContent style={{}}>\r\n                        <Typography gutterBottom variant=\"h5\" component=\"div\">\r\n                            <div style={{\r\n                                //this is a grid that lets text align to the left and right\r\n                                display: 'grid',\r\n                                gridTemplateColumns: '1fr 1fr',\r\n                                gridGap: '10px'\r\n\r\n                            }}>\r\n                                <a style={{\r\n                                    // color: \"#8b8c8f\"\r\n                                    // color: \"#d4d4d4\"\r\n                                    color: \"#dbdbdb\"\r\n                                }}>{this.props.booster_name}</a>\r\n                                <a style={{\r\n                                    color: \"#dbdbdb\",\r\n                                    textAlign: \"right\"\r\n                                }}>{this.props.mmr}</a>\r\n                            </div>\r\n\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" color=\"text.secondary\">\r\n                            <a style={{\r\n                                color: \"#b5b5b5\",\r\n                            }}>{this.state.description}</a>\r\n                        </Typography>\r\n                    </CardContent>\r\n                    <CardActions>\r\n                        <div style={{\r\n                            //this is a grid that lets text align to the left and right\r\n                            display: 'grid',\r\n                            gridTemplateColumns: '1fr 1fr',\r\n                            gridGap: '10px',\r\n                            //make it full width\r\n                            width: \"100%\"\r\n\r\n                        }}>\r\n\r\n                            <Button style={{\r\n                                color: \"#7481ca\",\r\n\r\n                            }} className='outlined_button' id={this.props.id} onClick={this.ContactBooster} variant=\"outlined\" size=\"small\">{this.state.contact_button_text}</Button>\r\n\r\n                            <Button style={{\r\n                                color: \"#7481ca\",\r\n                            }} className='outlined_button' variant=\"outlined\" size=\"small\">Report Booster</Button>\r\n\r\n                        </div>\r\n\r\n                    </CardActions>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BoosterCard;","C:\\Users\\krane\\Desktop\\iwantboost\\website\\iwantboost\\client\\src\\components\\SideBar.jsx",["60","61"],"//this would be a side bar to select the different categories of the app based on small images\r\n\r\nimport React from 'react';\r\n\r\nclass SideBar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoggedIn: false\r\n        }\r\n    }\r\n\r\n    Selected(data)\r\n    {\r\n        \r\n        /* change all getelementsbyclassname sidebarimg-selected to sidebarimg */\r\n        var sidebarimgs = document.getElementsByClassName(\"sidebarimg\");\r\n        for (var i = 0; i < sidebarimgs.length; i++) {\r\n            sidebarimgs[i].className = \"sidebarimg\";\r\n        }\r\n\r\n        data.target.className = \"sidebarimg-selected sidebarimg\";\r\n\r\n        if (data.target.alt == \"csgo\") {\r\n            document.getElementsByClassName(\"main-content\")[0].style.display = \"none\";\r\n            document.getElementsByClassName(\"csgo-content\")[0].style.display = \"block\";\r\n        }\r\n\r\n        if (data.target.alt == \"dota2\") {\r\n            document.getElementsByClassName(\"main-content\")[0].style.display = \"grid\";\r\n            document.getElementsByClassName(\"csgo-content\")[0].style.display = \"none\";\r\n        }\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"sidebar\">\r\n                <div className=\"sidebar-item\">\r\n                    <img onClick={this.Selected} className='sidebarimg' src={\"https://i.imgur.com/kIWE0VS.png\"} alt=\"dota2\" />\r\n                </div>\r\n\r\n                <div className=\"sidebar-item\">\r\n                    <img onClick={this.Selected} className=\"sidebarimg\" src={\"https://i.imgur.com/8ThI07o.png\"} alt=\"csgo\" />\r\n                </div>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default SideBar;","C:\\Users\\krane\\Desktop\\iwantboost\\website\\iwantboost\\client\\src\\components\\Header.jsx",["62","63","64"],"//this is a header  component that should be used for redirection to main page and display the logo in the center of it\r\n// to the left to be a small logo when pressed to go to main page and to the  right to be a button to go to the login page\r\n\r\nimport React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport BecomeABooster from './BecomeABooster';\r\n\r\nclass Header extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoggedIn: false\r\n        }\r\n    }\r\n\r\n    render_BecomeBooster(data) {\r\n        document.getElementById(\"become_a_booster_root\").style.display = \"block\";\r\n        \r\n\r\n        /* if esc is pressed, or pressed outside window close it */\r\n        window.onkeydown = function (e) {\r\n            if (e.keyCode == 27) {\r\n                document.getElementById(\"become_a_booster_root\").style.display = \"none\";\r\n            }\r\n        }\r\n        window.onclick = function (e) {\r\n            if (e.target == document.getElementById(\"become_a_booster_bg\")) {\r\n                document.getElementById(\"become_a_booster_root\").style.display = \"none\";\r\n            }\r\n        }\r\n    }\r\n\r\n    refresh_website() {\r\n        window.location.reload();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"header\">\r\n                <div className='logo'>\r\n                    <img onClick={this.refresh_website} className='logoimg' src={\"https://i.imgur.com/5IkRSrj.png\"} alt=\"mainlogo\" />\r\n                </div>\r\n                <div className=\"becomeabooster\">\r\n                    <Button onClick={this.render_BecomeBooster}  style={{\r\n                        color: \"#ebebeb\",\r\n                        backgroundColor: \"#3e4c9b\",\r\n                        fontSize: \"13px\",\r\n                        marginRight: \"10%\",\r\n                    }} variant=\"contained\" color=\"primary\">Become a Booster</Button>                \r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","C:\\Users\\krane\\Desktop\\iwantboost\\website\\iwantboost\\client\\src\\components\\LandingPage.jsx",[],"C:\\Users\\krane\\Desktop\\iwantboost\\website\\iwantboost\\client\\src\\components\\BecomeABooster.jsx",[],"C:\\Users\\krane\\Desktop\\iwantboost\\website\\iwantboost\\client\\src\\components\\ModernTextField.jsx",["65"],{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":1,"column":8,"nodeType":"72","messageId":"73","endLine":1,"endColumn":12},{"ruleId":"70","severity":1,"message":"74","line":8,"column":8,"nodeType":"72","messageId":"73","endLine":8,"endColumn":15},{"ruleId":"75","severity":1,"message":"76","line":36,"column":29,"nodeType":"77","endLine":36,"endColumn":61},{"ruleId":"75","severity":1,"message":"76","line":38,"column":48,"nodeType":"77","endLine":38,"endColumn":81},{"ruleId":"75","severity":1,"message":"76","line":38,"column":129,"nodeType":"77","endLine":38,"endColumn":162},{"ruleId":"75","severity":1,"message":"76","line":39,"column":46,"nodeType":"77","endLine":39,"endColumn":79},{"ruleId":"78","severity":1,"message":"79","line":46,"column":9,"nodeType":"80","messageId":"81","endLine":56,"endColumn":10},{"ruleId":"75","severity":1,"message":"76","line":92,"column":33,"nodeType":"77","endLine":96,"endColumn":36},{"ruleId":"75","severity":1,"message":"76","line":97,"column":33,"nodeType":"77","endLine":100,"endColumn":36},{"ruleId":"75","severity":1,"message":"76","line":105,"column":29,"nodeType":"77","endLine":107,"endColumn":32},{"ruleId":"82","severity":1,"message":"83","line":24,"column":29,"nodeType":"84","messageId":"85","endLine":24,"endColumn":31},{"ruleId":"82","severity":1,"message":"83","line":29,"column":29,"nodeType":"84","messageId":"85","endLine":29,"endColumn":31},{"ruleId":"70","severity":1,"message":"86","line":6,"column":8,"nodeType":"72","messageId":"73","endLine":6,"endColumn":22},{"ruleId":"82","severity":1,"message":"83","line":22,"column":27,"nodeType":"84","messageId":"85","endLine":22,"endColumn":29},{"ruleId":"82","severity":1,"message":"83","line":27,"column":26,"nodeType":"84","messageId":"85","endLine":27,"endColumn":28},{"ruleId":"87","severity":1,"message":"88","line":10,"column":5,"nodeType":"89","messageId":"90","endLine":13,"endColumn":6},"no-native-reassign",["91"],"no-negated-in-lhs",["92"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Overlay' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'BecomeABooster' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-global-assign","no-unsafe-negation"]