[{"C:\\Users\\krane\\Desktop\\iwantboost\\website\\iwantboost\\client\\src\\index.js":"1","C:\\Users\\krane\\Desktop\\iwantboost\\website\\iwantboost\\client\\src\\reportWebVitals.js":"2","C:\\Users\\krane\\Desktop\\iwantboost\\website\\iwantboost\\client\\src\\App.js":"3","C:\\Users\\krane\\Desktop\\iwantboost\\website\\iwantboost\\client\\src\\components\\Overlay.jsx":"4","C:\\Users\\krane\\Desktop\\iwantboost\\website\\iwantboost\\client\\src\\components\\BoosterCard.jsx":"5","C:\\Users\\krane\\Desktop\\iwantboost\\website\\iwantboost\\client\\src\\components\\SideBar.jsx":"6","C:\\Users\\krane\\Desktop\\iwantboost\\website\\iwantboost\\client\\src\\components\\Header.jsx":"7","C:\\Users\\krane\\Desktop\\iwantboost\\website\\iwantboost\\client\\src\\components\\LandingPage.jsx":"8"},{"size":500,"mtime":1641170808973,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1641170809091,"results":"11","hashOfConfig":"10"},{"size":5676,"mtime":1641361408218,"results":"12","hashOfConfig":"10"},{"size":700,"mtime":1641181076114,"results":"13","hashOfConfig":"10"},{"size":4732,"mtime":1641360566906,"results":"14","hashOfConfig":"10"},{"size":1707,"mtime":1641239878085,"results":"15","hashOfConfig":"10"},{"size":1009,"mtime":1641362470313,"results":"16","hashOfConfig":"10"},{"size":2050,"mtime":1641240564049,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"17pxxpa",{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"C:\\Users\\krane\\Desktop\\iwantboost\\website\\iwantboost\\client\\src\\index.js",[],["37","38"],"C:\\Users\\krane\\Desktop\\iwantboost\\website\\iwantboost\\client\\src\\reportWebVitals.js",[],"C:\\Users\\krane\\Desktop\\iwantboost\\website\\iwantboost\\client\\src\\App.js",["39","40"],"C:\\Users\\krane\\Desktop\\iwantboost\\website\\iwantboost\\client\\src\\components\\Overlay.jsx",[],"C:\\Users\\krane\\Desktop\\iwantboost\\website\\iwantboost\\client\\src\\components\\BoosterCard.jsx",["41","42","43","44","45","46","47","48","49"],"//card class using material ui card component\r\n//import all necesarry\r\n\r\n\r\nimport * as React from 'react';\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport CardMedia from '@mui/material/CardMedia';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport reactDom from 'react-dom';\r\n\r\n//card color #233454\r\n\r\nclass BoosterCard extends React.Component {\r\n\r\n    //make a changable text for the description of the booster\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            description: this.props.booster_description,\r\n            contact_button_text: \"Contact Booster\"\r\n        }\r\n\r\n        this.ContactBooster = this.ContactBooster.bind(this);\r\n    }\r\n\r\n\r\n    ContactBooster(data) {\r\n        console.log(data.target.id)\r\n        \r\n        this.setState({\r\n            description: \r\n            <div>\r\n                <center><a style={{color: \"#8b8c8f\"}}>Contact</a></center>\r\n  \r\n                {this.props.discord ? <div><a style={{color: \"#8b8c8f\",}}>Discord: {this.props.discord}</a><br/></div> :  <a style={{color: \"#8b8c8f\",}}>No contact info available</a>}\r\n                {this.props.email ? <div><a style={{color: \"#8b8c8f\",}}>Email: {this.props.email}</a><br/></div> :  null}\r\n            </div>        \r\n        })   \r\n        this.setState({\r\n            contact_button_text: \"See booster info\"\r\n        })\r\n\r\n        {if (this.state.contact_button_text === \"See booster info\") { \r\n            this.setState({\r\n                contact_button_text: \"Contact Booster\"\r\n            })\r\n            this.setState({\r\n                description: this.props.booster_description\r\n            })\r\n\r\n        }}\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                \r\n                <Card className=\"card\" sx={{\r\n                    width: 345,\r\n                    height: 345,\r\n                    //make it look like a card\r\n                    boxShadow: '0px 0px 5px 0px rgba(0,0,0,0.75)',\r\n                    borderRadius: '5px',\r\n                    margin: '10px',\r\n                    padding: '10px',\r\n                    backgroundColor: '#233454',\r\n                    color: 'white'\r\n\r\n                }}>\r\n                    <CardMedia\r\n                        component=\"img\"\r\n                        alt=\"green iguana\"\r\n                        height=\"140\"\r\n                        image={this.props.img}\r\n                    />\r\n                    <CardContent style={{}}>\r\n                        <Typography gutterBottom variant=\"h5\" component=\"div\">\r\n                            <div style={{\r\n                                //this is a grid that lets text align to the left and right\r\n                                display: 'grid',\r\n                                gridTemplateColumns: '1fr 1fr',\r\n                                gridGap: '10px'\r\n\r\n                            }}>\r\n                                <a style={{\r\n                                    // color: \"#8b8c8f\"\r\n                                    // color: \"#d4d4d4\"\r\n                                    color: \"#dbdbdb\"\r\n                                }}>{this.props.booster_name}</a>\r\n                                <a style={{\r\n                                    color: \"#dbdbdb\",\r\n                                    textAlign: \"right\"\r\n                                }}>{this.props.mmr}</a>\r\n                            </div>\r\n\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" color=\"text.secondary\">\r\n                            <a style={{\r\n                                color: \"#8b8c8f\",  \r\n                            }}>{this.state.description}</a>\r\n                        </Typography>\r\n                    </CardContent>\r\n                    <CardActions>\r\n                        <div style={{\r\n                            //this is a grid that lets text align to the left and right\r\n                            display: 'grid',\r\n                            gridTemplateColumns: '1fr 1fr',\r\n                            gridGap: '10px',\r\n                        }}>\r\n\r\n                            <Button className='outlined_button' id={this.props.id} onClick={this.ContactBooster} variant=\"outlined\" size=\"small\">{this.state.contact_button_text}</Button>\r\n                            <Button className='outlined_button' variant=\"outlined\" size=\"small\">Report Booster</Button>\r\n                        </div>\r\n\r\n                    </CardActions>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BoosterCard;","C:\\Users\\krane\\Desktop\\iwantboost\\website\\iwantboost\\client\\src\\components\\SideBar.jsx",["50","51"],"//this would be a side bar to select the different categories of the app based on small images\r\n\r\nimport React from 'react';\r\n\r\nclass SideBar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoggedIn: false\r\n        }\r\n    }\r\n\r\n    Selected(data)\r\n    {\r\n        \r\n        /* change all getelementsbyclassname sidebarimg-selected to sidebarimg */\r\n        var sidebarimgs = document.getElementsByClassName(\"sidebarimg\");\r\n        for (var i = 0; i < sidebarimgs.length; i++) {\r\n            sidebarimgs[i].className = \"sidebarimg\";\r\n        }\r\n\r\n        data.target.className = \"sidebarimg-selected sidebarimg\";\r\n\r\n        if (data.target.alt == \"csgo\") {\r\n            document.getElementsByClassName(\"main-content\")[0].style.display = \"none\";\r\n            document.getElementsByClassName(\"csgo-content\")[0].style.display = \"block\";\r\n        }\r\n\r\n        if (data.target.alt == \"dota2\") {\r\n            document.getElementsByClassName(\"main-content\")[0].style.display = \"grid\";\r\n            document.getElementsByClassName(\"csgo-content\")[0].style.display = \"none\";\r\n        }\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"sidebar\">\r\n                <div className=\"sidebar-item\">\r\n                    <img onClick={this.Selected} className='sidebarimg' src={\"https://i.imgur.com/kIWE0VS.png\"} alt=\"dota2\" />\r\n                </div>\r\n\r\n                <div className=\"sidebar-item\">\r\n                    <img onClick={this.Selected} className=\"sidebarimg\" src={\"https://i.imgur.com/8ThI07o.png\"} alt=\"csgo\" />\r\n                </div>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default SideBar;","C:\\Users\\krane\\Desktop\\iwantboost\\website\\iwantboost\\client\\src\\components\\Header.jsx",[],"C:\\Users\\krane\\Desktop\\iwantboost\\website\\iwantboost\\client\\src\\components\\LandingPage.jsx",[],{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":1,"column":8,"nodeType":"58","messageId":"59","endLine":1,"endColumn":12},{"ruleId":"56","severity":1,"message":"60","line":7,"column":8,"nodeType":"58","messageId":"59","endLine":7,"endColumn":15},{"ruleId":"56","severity":1,"message":"61","line":12,"column":8,"nodeType":"58","messageId":"59","endLine":12,"endColumn":16},{"ruleId":"62","severity":1,"message":"63","line":37,"column":25,"nodeType":"64","endLine":37,"endColumn":55},{"ruleId":"62","severity":1,"message":"63","line":39,"column":44,"nodeType":"64","endLine":39,"endColumn":75},{"ruleId":"62","severity":1,"message":"63","line":39,"column":123,"nodeType":"64","endLine":39,"endColumn":154},{"ruleId":"62","severity":1,"message":"63","line":40,"column":42,"nodeType":"64","endLine":40,"endColumn":73},{"ruleId":"65","severity":1,"message":"66","line":47,"column":9,"nodeType":"67","messageId":"68","endLine":55,"endColumn":11},{"ruleId":"62","severity":1,"message":"63","line":89,"column":33,"nodeType":"64","endLine":93,"endColumn":36},{"ruleId":"62","severity":1,"message":"63","line":94,"column":33,"nodeType":"64","endLine":97,"endColumn":36},{"ruleId":"62","severity":1,"message":"63","line":102,"column":29,"nodeType":"64","endLine":104,"endColumn":32},{"ruleId":"69","severity":1,"message":"70","line":24,"column":29,"nodeType":"71","messageId":"72","endLine":24,"endColumn":31},{"ruleId":"69","severity":1,"message":"70","line":29,"column":29,"nodeType":"71","messageId":"72","endLine":29,"endColumn":31},"no-native-reassign",["73"],"no-negated-in-lhs",["74"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Overlay' is defined but never used.","'reactDom' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]